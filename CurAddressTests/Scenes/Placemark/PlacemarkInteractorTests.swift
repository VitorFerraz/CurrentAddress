//
//  PlacemarkInteractorTests.swift
//  CurrentAddress
//
//  Created by vitor.ferrazvarela on 07/05/20.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import CurAddress
import XCTest

// MARK: Test doubles
class PlacemarkPresentationLogicSpy: PlacemarkPresentationLogic {
    var presentShowPhysicalAddressCalled = false
    
    func presentPhysicalAddress(response: Placemark.ShowPhysicalAddress.Response) {
        presentShowPhysicalAddressCalled = true
    }
    
    
}
class PlacemarkInteractorTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: PlacemarkInteractor!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupPlacemarkInteractor()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupPlacemarkInteractor()
  {
    sut = PlacemarkInteractor()
  }
  
  
  // MARK: Tests
    func testShowPhysicalAddress() {
        // Given
        let placemarkSpy = PlacemarkPresentationLogicSpy()
        sut.presenter = placemarkSpy
        sut.placemark = CurAddressTestHelpers.placemark
        let request = Placemark.ShowPhysicalAddress.Request()
        // When
        sut.showPhysicalAddress(request: request)
        // Then
        XCTAssertTrue(placemarkSpy.presentShowPhysicalAddressCalled, "showPhysicalAddress() should ask the presenter to format the result")
    }

}
